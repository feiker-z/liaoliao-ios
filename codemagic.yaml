workflows:
  ios-workflow:
    name: iOS Build
    max_build_duration: 60
    environment:
      ios_signing:
        distribution_type: ad_hoc
        bundle_identifier: app.article1307.danger1686
        certificate_upload: manual
      vars:
        XCODE_WORKSPACE: "TangSengDaoDaoiOS.xcworkspace"
        XCODE_SCHEME: "WuKongChatiOS"
        BUNDLE_ID: "app.article1307.danger1686"
      xcode: latest
      cocoapods: default
    scripts:
      - name: Install CocoaPods dependencies
        script: |
          pod install
      - name: Update Bundle ID
        script: |
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier $BUNDLE_ID" "TangSengDaoDao/Info.plist"
      - name: Clean problematic files
        script: |
          # 删除有问题的BUILD文件
          find . -name "BUILD" -type f -delete 2>/dev/null || true
          # 删除有问题的静态库文件
          find . -name "libopencore-amrnb.a" -delete 2>/dev/null || true
          find . -name "libopencore-amrwb.a" -delete 2>/dev/null || true
          find . -name "libvo-amrwbenc.a" -delete 2>/dev/null || true
          # 删除Notification扩展目录
          rm -rf NotificationContent NotificationService 2>/dev/null || true
          echo "清理完成"
      - name: Update all Bundle IDs
        script: |
          # 更新主应用的Bundle ID
          /usr/libexec/PlistBuddy -c "Set :CFBundleIdentifier app.article1307.danger1686" "TangSengDaoDao/Info.plist"
          # 批量替换所有plist文件中的Bundle ID
          find . -name "*.plist" -exec sed -i '' 's/com\.xinbida\.tangsengdaodao/app.article1307.danger1686/g' {} \;
          # 批量替换project.pbxproj中的Bundle ID
          sed -i '' 's/com\.xinbida\.tangsengdaodao/app.article1307.danger1686/g' TangSengDaoDaoiOS.xcodeproj/project.pbxproj
          echo "Bundle ID更新完成"
      - name: Build ipa for distribution
        script: |
          mkdir -p build/ios/xcarchive build/ios/ipa
          
          echo "Starting archive process..."
          echo "Workspace: $XCODE_WORKSPACE"
          echo "Scheme: $XCODE_SCHEME"
          echo "Bundle ID: $BUNDLE_ID"
          
          # 先尝试清理构建
          xcodebuild clean -workspace "$XCODE_WORKSPACE" -scheme "$XCODE_SCHEME"
          
          # 创建存档
          xcodebuild -workspace "$XCODE_WORKSPACE" \
            -scheme "$XCODE_SCHEME" \
            -config Release \
            -archivePath build/ios/xcarchive/TangSengDaoDaoiOS.xcarchive \
            archive COMPILER_INDEX_STORE_ENABLE=NO \
            -allowProvisioningUpdates \
            CODE_SIGN_STYLE=Automatic
          
          echo "Checking if archive was created..."
          ls -la build/ios/xcarchive/
          
          if [ ! -d "build/ios/xcarchive/TangSengDaoDaoiOS.xcarchive" ]; then
            echo "Archive creation failed!"
            echo "Checking for any .xcarchive files:"
            find . -name "*.xcarchive" -type d
            exit 1
          fi
          
          echo "Creating export options..."
          cat > export_options.plist <<EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
          <plist version="1.0">
          <dict>
              <key>method</key>
              <string>ad-hoc</string>
              <key>compileBitcode</key>
              <false/>
          </dict>
          </plist>
          EOF
          
          echo "Starting export process..."
          xcodebuild -exportArchive \
            -archivePath build/ios/xcarchive/TangSengDaoDaoiOS.xcarchive \
            -exportPath build/ios/ipa \
            -exportOptionsPlist export_options.plist \
            -allowProvisioningUpdates
          
          echo "Checking if IPA was created..."
          ls -la build/ios/ipa/
    artifacts:
      - build/ios/ipa/*.ipa